---
description: "MANDATORY enforcement of terminal command execution safety rules - zero tolerance for violations"
globs: ["**/*"]
alwaysApply: true
---

# TERMINAL COMMAND EXECUTION ENFORCEMENT

## 🚨 ZERO TOLERANCE ENFORCEMENT

This rule provides **MANDATORY** enforcement of terminal command execution safety with **ZERO TOLERANCE** for violations.

### **PROHIBITED PATTERNS - IMMEDIATE REJECTION**

#### ❌ Command Chaining (FORBIDDEN)
```bash
# REJECTED: Any form of command chaining
command1 && command2
command1 || command2
command1 ; command2
git add -A && git commit -m "message"
npm install && npm test
```

#### ❌ Echo/Printf in Commands (FORBIDDEN)
```bash
# REJECTED: Echo or printf in terminal commands
echo "Starting process..."
printf "Status: %s\n" "$status"
command && echo "completed"
```

#### ❌ File Creation via Cat (FORBIDDEN)
```bash
# REJECTED: Cat for file creation
cat > file.txt << EOF
cat >> file.txt << 'CONTENT'
```

### **✅ REQUIRED SAFE PATTERNS**

#### ✅ Single Commands with Timeout
```bash
# CORRECT: Simple command with timeout
timeout 30 npm test
timeout 10 git status
timeout 60 terraform plan
```

#### ✅ Separate Tool Calls for Multiple Operations
```bash
# CORRECT: Use separate tool calls
# Tool call 1:
timeout 10 git add -A

# Tool call 2:
timeout 30 git commit -m "fix: issue"

# Tool call 3:
timeout 60 git push origin main
```

#### ✅ File Operations with Dedicated Tools
```bash
# CORRECT: Use write() tool for file creation
# CORRECT: Use search_replace() for file editing
# CORRECT: Use read_file() for file reading
```

## 🛡️ MANDATORY ENFORCEMENT CHECKLIST

Before **ANY** terminal command, agents **MUST** verify:

- [ ] **Single command only** (no `&&`, `||`, `;`)
- [ ] **No echo/printf statements**
- [ ] **No cat for file creation**
- [ ] **Timeout present** (5s-300s)
- [ ] **Under 150 characters**
- [ ] **Non-interactive operation**
- [ ] **Output will be visible**

### **ENFORCEMENT ACTIONS**

**IMMEDIATE REJECTION**: Commands failing ANY checklist item are **IMMEDIATELY REJECTED**.

**NO EXCEPTIONS**: This rule applies to ALL terminal operations without exception.

**ZERO TOLERANCE**: Violations result in immediate command rejection and rule reminder.

## 📋 SAFE COMMAND TEMPLATES

### Template 1: Simple Operation
```bash
timeout 30 [command]
```

### Template 2: File System Operation
```bash
timeout 10 ls -la [directory]
timeout 15 find [path] -name "[pattern]"
```

### Template 3: Git Operation
```bash
timeout 10 git status
timeout 30 git commit -m "[message]"
timeout 60 git push origin [branch]
```

### Template 4: Build Operation
```bash
timeout 300 npm run build
timeout 180 terraform apply
timeout 120 docker build -t [tag] .
```

## 🔒 ENFORCEMENT MECHANISM

This rule is **ALWAYS APPLIED** and provides:

1. **Pre-execution validation** of all terminal commands
2. **Automatic rejection** of prohibited patterns
3. **Guidance redirection** to safe alternatives
4. **Zero tolerance enforcement** with no exceptions

**CRITICAL**: This rule supersedes all other considerations and must be followed without exception.
